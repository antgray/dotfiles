" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif

" Plugin directory is optional
call plug#begin()

" Declare the list of plugins.
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'dense-analysis/ale'

" List ends here. Plugins become visible to Vim after this call.
call plug#end()

colorscheme dracula

set encoding=utf-8
set noswapfile
set ruler
set ignorecase
set nohlsearch
set incsearch
set rnu

set expandtab           " use spaces for indentation instead of tab charactes
set softtabstop=2       " number of spaces for each <Tab> keypress
set shiftwidth=2        " number of spaces for auto-indentation
set shiftround

set textwidth=79
set colorcolumn=80

let g:indentLine_char = '⦙'

" clipboard
set clipboard=unnamed,unnamedplus
augroup wl-clipboard
  autocmd!
  autocmd FocusLost * :call system('wl-copy --trim-newline', @+)
  autocmd FocusGained * :let @+ = system('wl-paste -n')
augroup END

" ALE settings
let g:ale_sign_error = '>>'
let g:ale_sign_warning = '>>'

let g:ale_lint_on_text_change = 'never'
let g:ale_lint_on_insert_leave = 'true'
let g:ale_linters = {'bash': ['shellcheck']}
let g:ale_linters = {'yaml': ['yamllint']}

let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_sign_error = '✘'
let g:ale_sign_warning = '⚠'
let g:ale_lint_on_text_changed = 'never'

let g:ale_fix_on_save = 1
let b:ale_fixers = {'yaml': ['prettier', 'trim_whitespace', 'remove_trailing_lines']}

" YAML
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

" Remaps
imap jj <ESC>
nmap confe :e ~/.vimrc<CR>
nmap so :source ~/.vimrc<CR>
nnoremap <C-U> <C-U>zz  " center page on page up
nnoremap <C-D> <C-D>zz  " center page on page down
nnoremap n nzzzv
nnoremap N Nzzv

"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" buffer naviagation
nnoremap <C-h> :bp<CR>
nnoremap <C-l> :bn<CR>
nnoremap gb :ls<CR>:b<Space>

" Mouse support
set mouse=a
set ttymouse=sgr
set balloonevalterm

